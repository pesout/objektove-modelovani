<?xml version="1.0"?>

<st-source>
<time-stamp>From VisualWorksÂ® NonCommercial, 7.4.1 of May 30, 2006 on March 15, 2024 at 1:49:20 am</time-stamp>


<class>
<name>Osoba</name>
<environment>Smalltalk</environment>
<super>DaskalosDataObject</super>
<private>false</private>
<indexed-type>none</indexed-type>
<inst-vars>jmeno prijmeni </inst-vars>
<class-inst-vars></class-inst-vars>
<imports></imports>
<category>DaskalosUserClasses</category>
<attributes>
<package>DaskalosUserClasses</package>
</attributes>
</class>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Osoba class</class-id> <category>instance variables behavior</category>

<body package="DaskalosUserClasses" selector="instVarTypes">instVarTypes
"resource for Daskalos"
^((Core.Dictionary new) add: (#jmeno -&gt; Core.String); add: (#prijmeni -&gt; Core.String); yourself)</body>
</methods>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Osoba</class-id> <category>accessing</category>

<body package="DaskalosUserClasses" selector="jmeno">jmeno
"generated by Daskalos"

     ^jmeno</body>

<body package="DaskalosUserClasses" selector="jmeno:">jmeno: anObject
"generated by Daskalos"

     jmeno := (self checkValue: anObject forVariable: #jmeno)</body>

<body package="DaskalosUserClasses" selector="prijmeni">prijmeni
"generated by Daskalos"

     ^prijmeni</body>

<body package="DaskalosUserClasses" selector="prijmeni:">prijmeni: anObject
"generated by Daskalos"

     prijmeni := (self checkValue: anObject forVariable: #prijmeni)</body>
</methods>

<methods>
<class-id>Osoba</class-id> <category>instance initialization</category>

<body package="DaskalosUserClasses" selector="initialize">initialize
"generated by Daskalos"

     super initialize.
     jmeno := nil.
     prijmeni := nil.
</body>
</methods>


<class>
<name>Vystupujici</name>
<environment>Smalltalk</environment>
<super>Osoba</super>
<private>false</private>
<indexed-type>none</indexed-type>
<inst-vars>casVystoupeni </inst-vars>
<class-inst-vars></class-inst-vars>
<imports></imports>
<category>DaskalosUserClasses</category>
<attributes>
<package>DaskalosUserClasses</package>
</attributes>
</class>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Vystupujici class</class-id> <category>instance variables behavior</category>

<body package="DaskalosUserClasses" selector="instVarTypes">instVarTypes
"resource for Daskalos"
^((Core.Dictionary new) add: (#casVystoupeni -&gt; Core.String); add: (#prijmeni -&gt; Core.String); add: (#jmeno -&gt; Core.String); yourself)</body>
</methods>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Vystupujici</class-id> <category>accessing</category>

<body package="DaskalosUserClasses" selector="casVystoupeni">casVystoupeni
"generated by Daskalos"

     ^casVystoupeni</body>

<body package="DaskalosUserClasses" selector="casVystoupeni:">casVystoupeni: anObject
"generated by Daskalos"

     casVystoupeni := (self checkValue: anObject forVariable: #casVystoupeni)</body>
</methods>

<methods>
<class-id>Vystupujici</class-id> <category>instance initialization</category>

<body package="DaskalosUserClasses" selector="initialize">initialize
"generated by Daskalos"

     super initialize.
     casVystoupeni := nil.
</body>
</methods>


<class>
<name>Navstevnik</name>
<environment>Smalltalk</environment>
<super>Osoba</super>
<private>false</private>
<indexed-type>none</indexed-type>
<inst-vars>rokNarozeni vstupenka </inst-vars>
<class-inst-vars></class-inst-vars>
<imports></imports>
<category>DaskalosUserClasses</category>
<attributes>
<package>DaskalosUserClasses</package>
</attributes>
</class>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Navstevnik class</class-id> <category>instance variables behavior</category>

<body package="DaskalosUserClasses" selector="instVarTypes">instVarTypes
"resource for Daskalos"
^((Core.Dictionary new) add: (#rokNarozeni -&gt; Core.Number); add: (#prijmeni -&gt; Core.String); add: (#vstupenka -&gt; Core.Object); add: (#jmeno -&gt; Core.String); yourself)</body>
</methods>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Navstevnik</class-id> <category>accessing</category>

<body package="DaskalosUserClasses" selector="rokNarozeni">rokNarozeni
"generated by Daskalos"

     ^rokNarozeni</body>

<body package="DaskalosUserClasses" selector="rokNarozeni:">rokNarozeni: anObject
"generated by Daskalos"

     rokNarozeni := (self checkValue: anObject forVariable: #rokNarozeni)</body>

<body package="DaskalosUserClasses" selector="vstupenka">vstupenka
"generated by Daskalos"

     ^vstupenka</body>

<body package="DaskalosUserClasses" selector="vstupenka:">vstupenka: anObject
"generated by Daskalos"

     vstupenka := (self checkValue: anObject forVariable: #vstupenka)</body>
</methods>

<methods>
<class-id>Navstevnik</class-id> <category>instance initialization</category>

<body package="DaskalosUserClasses" selector="initialize">initialize
"generated by Daskalos"

     super initialize.
     rokNarozeni := nil.
     vstupenka := nil.
</body>
</methods>

<methods>
<class-id>Navstevnik</class-id> <category>other methods</category>

<body package="DaskalosUserClasses" selector="vek">vek
	^2024 - rokNarozeni</body>
</methods>


<class>
<name>Poradatel</name>
<environment>Smalltalk</environment>
<super>Osoba</super>
<private>false</private>
<indexed-type>none</indexed-type>
<inst-vars>specializace zodpovednost </inst-vars>
<class-inst-vars></class-inst-vars>
<imports></imports>
<category>DaskalosUserClasses</category>
<attributes>
<package>DaskalosUserClasses</package>
</attributes>
</class>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Poradatel class</class-id> <category>instance variables behavior</category>

<body package="DaskalosUserClasses" selector="instVarTypes">instVarTypes
"resource for Daskalos"
^((Core.Dictionary new) add: (#jmeno -&gt; Core.String); add: (#prijmeni -&gt; Core.String); add: (#zodpovednost -&gt; Core.Object); add: (#specializace -&gt; Core.String); yourself)</body>
</methods>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Poradatel</class-id> <category>accessing</category>

<body package="DaskalosUserClasses" selector="specializace">specializace
"generated by Daskalos"

     ^specializace</body>

<body package="DaskalosUserClasses" selector="specializace:">specializace: anObject
"generated by Daskalos"

     specializace := (self checkValue: anObject forVariable: #specializace)</body>

<body package="DaskalosUserClasses" selector="zodpovednost">zodpovednost
"generated by Daskalos"

     ^zodpovednost</body>

<body package="DaskalosUserClasses" selector="zodpovednost:">zodpovednost: anObject
"generated by Daskalos"

     zodpovednost := (self checkValue: anObject forVariable: #zodpovednost)</body>
</methods>

<methods>
<class-id>Poradatel</class-id> <category>instance initialization</category>

<body package="DaskalosUserClasses" selector="initialize">initialize
"generated by Daskalos"

     super initialize.
     specializace := nil.
     zodpovednost := nil.
</body>
</methods>


<class>
<name>Stage</name>
<environment>Smalltalk</environment>
<super>DaskalosDataObject</super>
<private>false</private>
<indexed-type>none</indexed-type>
<inst-vars>nazev kapacita vystupujici </inst-vars>
<class-inst-vars></class-inst-vars>
<imports></imports>
<category>DaskalosUserClasses</category>
<attributes>
<package>DaskalosUserClasses</package>
</attributes>
</class>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Stage class</class-id> <category>instance variables behavior</category>

<body package="DaskalosUserClasses" selector="instVarTypes">instVarTypes
"resource for Daskalos"
^((Core.Dictionary new) add: (#nazev -&gt; Core.String); add: (#vystupujici -&gt; Core.Set); add: (#kapacita -&gt; Core.Number); yourself)</body>
</methods>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Stage</class-id> <category>accessing</category>

<body package="DaskalosUserClasses" selector="kapacita">kapacita
"generated by Daskalos"

     ^kapacita</body>

<body package="DaskalosUserClasses" selector="kapacita:">kapacita: anObject
"generated by Daskalos"

     kapacita := (self checkValue: anObject forVariable: #kapacita)</body>

<body package="DaskalosUserClasses" selector="nazev">nazev
"generated by Daskalos"

     ^nazev</body>

<body package="DaskalosUserClasses" selector="nazev:">nazev: anObject
"generated by Daskalos"

     nazev := (self checkValue: anObject forVariable: #nazev)</body>

<body package="DaskalosUserClasses" selector="vystupujici">vystupujici
"generated by Daskalos"

     ^vystupujici</body>
</methods>

<methods>
<class-id>Stage</class-id> <category>instance initialization</category>

<body package="DaskalosUserClasses" selector="initialize">initialize
"generated by Daskalos"

     super initialize.
     nazev := nil.
     kapacita := nil.
     vystupujici := Set new.
</body>
</methods>


<class>
<name>Vstupenka</name>
<environment>Smalltalk</environment>
<super>DaskalosDataObject</super>
<private>false</private>
<indexed-type>none</indexed-type>
<inst-vars>cena stage </inst-vars>
<class-inst-vars></class-inst-vars>
<imports></imports>
<category>DaskalosUserClasses</category>
<attributes>
<package>DaskalosUserClasses</package>
</attributes>
</class>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Vstupenka class</class-id> <category>instance variables behavior</category>

<body package="DaskalosUserClasses" selector="instVarTypes">instVarTypes
"resource for Daskalos"
^((Core.Dictionary new) add: (#stage -&gt; Core.Set); add: (#cena -&gt; Core.Number); yourself)</body>
</methods>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Vstupenka</class-id> <category>accessing</category>

<body package="DaskalosUserClasses" selector="cena">cena
"generated by Daskalos"

     ^cena</body>

<body package="DaskalosUserClasses" selector="cena:">cena: anObject
"generated by Daskalos"

     cena := (self checkValue: anObject forVariable: #cena)</body>

<body package="DaskalosUserClasses" selector="stage">stage
"generated by Daskalos"

     ^stage</body>
</methods>

<methods>
<class-id>Vstupenka</class-id> <category>instance initialization</category>

<body package="DaskalosUserClasses" selector="initialize">initialize
"generated by Daskalos"

     super initialize.
     cena := nil.
     stage := Set new.
</body>
</methods>


</st-source>
